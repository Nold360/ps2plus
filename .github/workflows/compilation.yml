name: CI

on: push

jobs:
  configurator:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Compile the `latest` version (via Docker Compose)
        run: VERSION_METADATA=latest docker compose -f docker/docker-compose.yml run configurator
        shell: bash

      - name: Compile the tagged version, if necessary (via Docker Compose)
        run: VERSION_METADATA= docker compose -f docker/docker-compose.yml run configurator
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash

      - name: Upload configurator
        uses: actions/upload-artifact@v2
        with:
          name: configurator
          path: dist/configurator/*.elf

  bootloader-and-firmware:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: 
          - PIC18F46K42
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Generate the appropriate Docker Compose service name
        id: service-name
        uses: ASzc/change-string-case-action@v1
        with:
          string: firmware-${{ matrix.platform }}

      - name: Compile the `latest` version (via Docker Compose)
        run: VERSION_METADATA=latest docker compose -f docker/docker-compose.yml run ${{ steps.service-name.outputs.lowercase }}
        shell: bash

      - name: Compile the tagged version, if necessary (via Docker Compose)
        run: docker compose -f docker/docker-compose.yml run ${{ steps.service-name.outputs.lowercase }}
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash

      - name: Upload firmware
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: dist/ps2plus-${{ matrix.platform }}-firmware-*.hex

      - name: Upload bootloader
        uses: actions/upload-artifact@v2
        with:
          name: bootloader
          path: dist/ps2plus-${{ matrix.platform }}-bootloader-*.hex

  release:
    needs: [configurator, bootloader-and-firmware]
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Delete the `latest` tag and release, if existing
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release the `latest` version
        uses: softprops/action-gh-release@v1
        with:
          name: Development build
          tag_name: "latest"
          prerelease: true
          files: |
            bootloader/*-latest.hex
            firmware/*-latest.hex
            configurator/*-latest.elf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}